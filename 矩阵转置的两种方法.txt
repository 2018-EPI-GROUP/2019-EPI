1，矩阵转置的实现
         使用两个副本实现矩阵的转置，方法一的代码如下：
         #include <stdio.h>
         ＃定义SIZE 4 / *分散容量* /
         
         int main（void）{
             int i，j;
             int array [SIZE] [SIZE] = {{0,1,2,3} / *定义并初始化二维数组* /
                               {4,5,6,7}
                               {8,9,10,11}
                               {12,13,14,15}}；
             int transpose [SIZE] [SIZE] = {0}; / *定义二维矩阵并初始化全为0 * /
             
             / *打印二维数组* /
             printf（“主数组：\ n”）; / *输出辅助信息* /
             for（i = 0; i <SIZE; ++ i）/ * i为行号* /
                 for（j = 0; j <SIZE; ++ j）/ * j为列号* /
                     printf（“ \ t％-4d”，array [i] [j]“）; / *输出第i行第j列元素* /
                 printf（“ \ n”）;
                 
              / *将副本转置结果存入另一个副本中* /   
              for（i = 0; i <SIZE; ++ i）{
                 for（j = 0; j <SIZE; ++ j）
                     转置[j] [i] =数组[i] [j];
                                                / *为transpose中第j行第i列元素* /
              }
              
              / *打印二维数组* /
              printf（“ \ n最终数组：\ n”）; / *输出辅助信息* /
              for（i = 0; i <SIZE; ++ i）
                  for（j = 0; j <SIZE; ++ j）
                      printf（“ \ t％-4d”，transpose [i] [j]）; / *输出第i行第j列元素* /
                  printf（“ \ n”）;
              }
              
                  返回0;
          }

方法二：
     #include <stdio.h>
     ＃定义尺寸4
     
     int main（void）{
         int array [SIZE] [SIZE] = {{0,1,2,3} / *定义并初始化二维数组* /
                               {4,5,6,7}
                               {8,9,10,11}
                               {12,13,14,15}}；
         int tmp = 0;
         int i = 0;
         int j = 0;
         
         / *打印二维数组* /
             printf（“主数组：\ n”）; / *输出辅助信息* /
             for（i = 0; i <SIZE; ++ i）{/ * i为行号* /
                 for（j = 0; j <SIZE; ++ j）/ * j为列号* /
                     printf（“ \ t％-4d”，array [i] [j]“）; / *输出第i行第j列元素* /
                 printf（“ \ n”）;
             }
             
             
             for（i = 0; i <SIZE; ++ i）{                 
                 for（j = 0; j <SIZE; ++ j）{
                     
                     tmp = array [j] [i];
                     array [j] [i] = array [i] [j];
                     array [i] [j] = tmp;
                 }
             }
             
             
             printf（“ \ n最终数组：\ n”）; / *输出辅助信息* /
              for（i = 0; i <SIZE; ++ i）
                  for（j = 0; j <SIZE; ++ j）
                      printf（“ \ t％-4d”，transpose [i] [j]）; / *输出第i行第j列元素* /
                  printf（“ \ n”）;
              }
              
                  返回0;
         }
         使用这种方法也可以实现层叠的转置。